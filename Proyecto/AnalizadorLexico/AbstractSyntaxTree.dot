digraph G {
"ROOT. ROOT = ROOT"->"MAIN.  = MAIN"
"MAIN. MAIN = MAIN"->"DECLARATION.  = DECLARATION"
"DECLARATION. DECLARATION = DECLARATION"->"integer.  = integer"
"DECLARATION. DECLARATION = DECLARATION"->"varchar.  = varchar"
"MAIN. MAIN = MAIN"->"DECLARATION.  = DECLARATION"
"DECLARATION. DECLARATION = DECLARATION"->"integer.  = integer"
"DECLARATION. DECLARATION = DECLARATION"->"x.  = x"
"DECLARATION. DECLARATION = DECLARATION"->"+.  = +"
"+. + = +"->"5.  = 5"
"+. + = +"->"/.  = /"
"/. / = /"->"3.  = 3"
"/. / = /"->"-.  = -"
"-. - = -"->"5.  = 5"
"-. - = -"->"2.  = 2"
"MAIN. MAIN = MAIN"->"FOR.  = FOR"
"FOR. FOR = FOR"->"FOR STATEMENT.  = FOR STATEMENT"
"FOR STATEMENT. FOR STATEMENT = FOR STATEMENT"->"i.  = i"
"FOR STATEMENT. FOR STATEMENT = FOR STATEMENT"->"0.  = 0"
"FOR. FOR = FOR"->"BOOLEAN STATEMENT.  = BOOLEAN STATEMENT"
"BOOLEAN STATEMENT. BOOLEAN STATEMENT = BOOLEAN STATEMENT"->"i.  = i"
"BOOLEAN STATEMENT. BOOLEAN STATEMENT = BOOLEAN STATEMENT"->"<.  = <"
"BOOLEAN STATEMENT. BOOLEAN STATEMENT = BOOLEAN STATEMENT"->"6.  = 6"
"FOR. FOR = FOR"->"FOR DECLARATION.  = FOR DECLARATION"
"FOR DECLARATION. FOR DECLARATION = FOR DECLARATION"->"i.  = i"
"FOR DECLARATION. FOR DECLARATION = FOR DECLARATION"->"++.  = ++"
"FOR. FOR = FOR"->"THEN.  = THEN"
"THEN. THEN = THEN"->"TEST.  = TEST"
"TEST. TEST = TEST"->"BOOLEAN SATEMENT.  = BOOLEAN SATEMENT"
"BOOLEAN SATEMENT. BOOLEAN SATEMENT = BOOLEAN SATEMENT"->"|.  = |"
"|. | = |"->"x.  = x"
"|. | = |"->"<.  = <"
"|. | = |"->"3.  = 3"
"|. | = |"->"&.  = &"
"&. & = &"->"!.  = !"
"!. ! = !"->"x.  = x"
"!. ! = !"->">.  = >"
"!. ! = !"->"15.  = 15"
"&. & = &"->"x.  = x"
"&. & = &"->">.  = >"
"&. & = &"->"10.  = 10"
"TEST. TEST = TEST"->"THEN.  = THEN"
"THEN. THEN = THEN"->"THROWLN.  = THROWLN"
"THROWLN. THROWLN = THROWLN"->"x.  = x"
"TEST. TEST = TEST"->"OR.  = OR"
"OR. OR = OR"->"THROW.  = THROW"
"THROW. THROW = THROW"->"i.  = i"
"MAIN. MAIN = MAIN"->"UNTIL.  = UNTIL"
"UNTIL. UNTIL = UNTIL"->"BOOLEAN SATEMENT.  = BOOLEAN SATEMENT"
"BOOLEAN SATEMENT. BOOLEAN SATEMENT = BOOLEAN SATEMENT"->"true.  = true"
"UNTIL. UNTIL = UNTIL"->"DO.  = DO"
"DO. DO = DO"->"THROW.  = THROW"
"THROW. THROW = THROW"->"x.  = x"
"ROOT. ROOT = ROOT"->"INTEGER METHOD.  = INTEGER METHOD"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"f2.  = f2"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"INTEGER.  = INTEGER"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"x1.  = x1"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"INTEGER.  = INTEGER"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"x2.  = x2"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"BLOQUE.  = BLOQUE"
"BLOQUE. BLOQUE = BLOQUE"->"DECLARATION.  = DECLARATION"
"DECLARATION. DECLARATION = DECLARATION"->"integer.  = integer"
"DECLARATION. DECLARATION = DECLARATION"->"x.  = x"
"BLOQUE. BLOQUE = BLOQUE"->"METHOD-CALL.  = METHOD-CALL"
"METHOD-CALL. METHOD-CALL = METHOD-CALL"->"f2.  = f2"
"METHOD-CALL. METHOD-CALL = METHOD-CALL"->"PARAMETROS.  = PARAMETROS"
"INTEGER METHOD. INTEGER METHOD = INTEGER METHOD"->"RETURN.  = RETURN"
"RETURN. RETURN = RETURN"->"x.  = x"


}
